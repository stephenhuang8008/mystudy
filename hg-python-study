X[:,0]是numpy中数组的一种写法，表示对一个二维数组，取该二维数组第一维中的所有数据，第二维中取第0个数据，
直观来说，X[:,0]就是取所有行的第0个数据, X[:,1] 就是取所有行的第1个数据。

python中[:-1]:
It slices the string to omit the last character, in this case a newline character:
>>> 'test\n'[:-1]
'test'

lambda
1 func=lambda x:x+1
2 print(func(1))
3 #2
4 print(func(2))
5 #3
6
7 #以上lambda等同于以下函数
8 def func(x):
9     return(x+1)
可以这样认为,lambda作为一个表达式，定义了一个匿名函数，上例的代码x为入口参数，x+1为函数体。在这里lambda简化了函数定义的书写形式。是代码更为简洁，但是使用函数的定义方式更为直观，易理解。

est.train(
    steps=1000,
    input_fn=lambda : iris_data.csv_input_fn(train_path, batch_size))

Estimators expect an input_fn to take no arguments. To work around this restriction, we use lambda to capture the arguments and provide the expected interface.

numpy.argmax(a, axis=None, out=None)
返回沿轴axis最大值的索引。


====tensorflow 官网学习: Creating Customer Estimators

argmax:

Parameters:
a : array_like
数组
axis : int, 可选
默认情况下，索引的是平铺的数组，否则沿指定的轴。
out : array, 可选
如果提供，结果以合适的形状和类型被插入到此数组中。
Returns:
index_array : ndarray of ints
索引数组。它具有与a.shape相同的形状，其中axis被移除。
例子：

>>> a = np.arange(6).reshape(2,3)
>>> a
array([[0, 1, 2],
       [3, 4, 5]])
>>> np.argmax(a)
5
>>> np.argmax(a, axis=0)#0代表最外层，最大值出现在第二行， 1， 1， 1
array([1, 1, 1])
>>> np.argmax(a, axis=1)#1代表行
array([2, 2])
>>>
>>> b = np.arange(6)
>>> b[1] = 5
>>> b
array([0, 5, 2, 3, 4, 5])
>>> np.argmax(b) # 只返回第一次出现的最大值的索引
1

====
X[:,0]是numpy中数组的一种写法，表示对一个二维数组，取该二维数组第一维中的所有数据，第二维中取第0个数据，
直观来说，X[:,0]就是取所有行的第0个数据, X[:,1] 就是取所有行的第1个数据。
另外好像 -1 指最后一个数据

====
What does a dot after an integer mean in python?
 The dot signals a float.

 ====
 A=np.array([1,2,3])
 'shape': (3,),
 b=A[0]
 'shape': (),
 You have to use .item to access the underlying 'scalar':
 b.item()
  1
  type(b.item())
  int
  So you can think of b as a scalar with a numpy wrapper. The __array_interface__ for b looks very much
  like that of np.array(1).

  ====
  some_list[-1] is the shortest and most Pythonic.
   some_list[-n] syntax gets the nth-to-last element. So some_list[-1] gets the last element,
   some_list[-2] gets the second to last, etc, all the way down to some_list[-len(some_list)], which gives you the first element.

What does [:-1] mean/do in python? [duplicate]
It slices the string to omit the last character, in this case a newline character:
>>> 'test\n'[:-1]
'test'

====
python
string.format
this format is not the same thing as shape, pay attention

good: 为什么说随机最速下降法(SGD)是一个很好的方法？
https://zhuanlan.zhihu.com/p/27609238

